<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        a63fiRT/BxeyeMYlREBAAAAAAElFTkSuQmCC
</value>
  </data>
</root>